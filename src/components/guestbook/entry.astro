---
const response = await fetch("https://guestbook-api.edmateo.site/");
const entries = await response.json();

function formatDate(isoDate) {
  const date = new Date(isoDate);
  const formattedDate = date.toLocaleDateString("es-ES", {
    day: "2-digit",
    month: "2-digit",
    year: "numeric",
  });
  const formattedTime = date.toLocaleTimeString("es-ES", {
    hour: "2-digit",
    minute: "2-digit",
  });
  return { formattedDate, formattedTime };
}

function normalizeUrl(url) {
  if (!url.startsWith("http://") && !url.startsWith("https://")) {
    return `http://${url}`;
  }
  return url;
  }

export const prerender = false
---

<div>
  {entries.map((entry) => {
    const { formattedDate, formattedTime } = formatDate(entry.CreatedAt);
    return (
      <div class="entry-box" id={`entry-${entry.ID}`} key={entry.ID}>
        <div class="entry-header">
          <div class="namekajweb">
            <strong>
              <span class="importantshit">{entry.Name}</span>
            </strong>
            {entry.Website ? (
              <>{" desde "}<a href={normalizeUrl(entry.Website)} target="_blank" rel="noopener noreferrer">{entry.Website}</a></>
            ) : null}
          </div>
          <div class="datekajid">
            <span class="date">escrito el <strong><span class="importantshit">{formattedDate}</span></strong> a las <strong><span class="importantshit">{formattedTime}</span></strong></span>
            <a href={`/guestbook/#entry-${entry.ID}`} class="post-number">No.{entry.ID}</a>
          </div>
        </div>
        <div class="entry-content"><span style={{ whiteSpace: "pre-line" }}>{entry.Message}</span></div>
      </div>
    );
  })}
</div>
