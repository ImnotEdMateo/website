---
const response = await fetch("https://guestbook-api.edmateo.site/");
const entries = await response.json();

const formatDate = iso => {
  const d = new Date(iso);
  return {
    formattedDate: d.toLocaleDateString("es-ES", { day: "2-digit", month: "2-digit", year: "numeric" }),
    formattedTime: d.toLocaleTimeString("es-ES", { hour: "2-digit", minute: "2-digit" })
  };
};

const normalizeUrl = url => /^https?:\/\//i.test(url) ? url : `http://${url}`;
const parseMessage = msg => msg.replace(/>>(\d+)/g, (m, id) => `<a href="/guestbook#entry-${id}">${m}</a>`);

export const prerender = false;
---

<div>
  {entries.map(({ ID, CreatedAt, Name, Website, Message }) => {
    const { formattedDate, formattedTime } = formatDate(CreatedAt);
    return (
      <div class="entry-box" id={`entry-${ID}`} key={ID}>
        <div class="entry-header">
          <div class="namekajweb">
            <strong><span class="importantshit">{Name}</span></strong>
            {Website && (
              <>
                {" desde "}
                <a href={normalizeUrl(Website)} target="_blank" rel="noopener noreferrer">
                  {Website}
                </a>
              </>
            )}
          </div>
          <div class="datekajid">
            <span class="date">
              escrito el <strong><span class="importantshit">{formattedDate}</span></strong> a las{" "}
              <strong><span class="importantshit">{formattedTime}</span></strong>
            </span>
            <a href={`javascript:quote(${ID})`} class="post-number reply-link">No.{ID}</a>
          </div>
        </div>
        <div class="entry-content">
          <span style="white-space: pre-line" set:html={parseMessage(Message)}></span>
        </div>
      </div>
    );
  })}
</div>

<script>
  window.quote = id => {
    const field = document.querySelector('#guestbook-form textarea[name="message"]');
    if(field) {
      field.value += `>>${id}\n`;
      field.focus();
    }
  }
</script>
